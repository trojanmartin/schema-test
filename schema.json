{
  "type" : "object",
  "properties" : {
    "Tomra" : {
      "type" : "object",
      "properties" : {
        "Active" : {
          "type" : "boolean",
          "description" : "True if TOMRA is active, otherwise false.\r\n**Change type**: 'Automatic'.",
          "default" : false
        },
        "Prefix" : {
          "type" : "string",
          "description" : "TOMRA prefix.\r\n**Change type**: 'Automatic'.",
          "default" : "981"
        },
        "StoreId" : {
          "type" : "string",
          "description" : "TOMRA store id.\r\n**Change type**: 'Automatic'."
        },
        "ProductNumber" : {
          "type" : "string",
          "description" : "TOMRA product number.\r\n**Change type**: 'Automatic'."
        },
        "RefundEnabled" : {
          "type" : [ "boolean", "null" ],
          "description" : "True if TOMRA refund is available, otherwise false.\r\n**Change type**: 'Automatic'."
        },
        "IgnoreStoreId" : {
          "type" : [ "boolean", "null" ],
          "description" : "True if TOMRA store id should be ignored, otherwise false.\r\n**Change type**: 'Automatic'."
        }
      },
      "description" : "Tomra settings."
    },
    "ForecourtConfiguration" : {
      "type" : "object",
      "properties" : {
        "DispenserSalesPriceMismatchHandle" : {
          "enum" : [ "Reject", "UseDBPrice", "UseDBPriceWithDiscount", "UseDispenserPrice", "UseDispenserPriceWithDiscount", "UseLowerPrice", "UseLowerWithDispenserPriceAndDiscount", "UseLowerWithDBPriceAndDiscount", null ],
          "description" : "Dispenser sales price mismatch handle mode."
        },
        "DispenserTotalPriceMismatchHandle" : {
          "enum" : [ "Reject", "UseQuantity", "UseDiscount", "UseOnlyPositiveDiscount", "UseDispenserAmount", null ],
          "description" : "Dispenser total price mismatch handle mode."
        }
      },
      "description" : "Forecourt configuration model."
    },
    "Recovery" : {
      "type" : "object",
      "properties" : {
        "Sales" : {
          "type" : "integer",
          "description" : "Sales recovery Id.\r\n**Change type**: 'Automatic'.",
          "default" : 0
        },
        "Cash" : {
          "type" : "integer",
          "description" : "Cash recovery Id.\r\n**Change type**: 'Automatic'.",
          "default" : 0
        },
        "Closure" : {
          "type" : "integer",
          "description" : "Closure recovery Id.\r\n**Change type**: 'Automatic'.",
          "default" : 0
        }
      },
      "description" : "Recovery settings."
    },
    "EventBus" : {
      "type" : "object",
      "properties" : {
        "Host" : {
          "type" : "string",
          "description" : "RabbitMQ server host name."
        },
        "VirtualHost" : {
          "type" : "string",
          "description" : "RabbitMQ server virtual host."
        },
        "TlsServerName" : {
          "type" : "string",
          "description" : "Tls server name."
        },
        "TlsPort" : {
          "type" : [ "integer", "null" ],
          "description" : "Tls port."
        },
        "UseTls" : {
          "type" : "boolean",
          "description" : "True when use tls."
        },
        "Port" : {
          "type" : "integer",
          "description" : "RabbitMQ server port."
        },
        "RetryCount" : {
          "type" : "integer",
          "description" : "Number of retries on failure.",
          "default" : 5,
          "minimum" : 1
        },
        "QueueName" : {
          "type" : "string",
          "description" : "RabbitMQ queue name for receiving messages."
        },
        "DefaultRabbitPrefetchCount" : {
          "type" : "integer",
          "description" : "Prefetch count for RabbitMQ consumers.",
          "default" : 1
        }
      },
      "required" : [ "Host", "VirtualHost", "Port", "QueueName" ],
      "description" : "Event bus settings."
    },
    "Feature" : {
      "type" : "object",
      "properties" : {
        "ExciseTaxEnabled" : {
          "type" : "boolean",
          "description" : "Excise tax functionality enabled.",
          "default" : false
        },
        "TransactionParkingEnabled" : {
          "type" : "boolean",
          "description" : "Transaction parking enabled.",
          "default" : false
        },
        "HeatingOilEnabled" : {
          "type" : "boolean",
          "description" : "Heating oil enabled.",
          "default" : false
        },
        "VacuumAfterUserLogin" : {
          "type" : "boolean",
          "description" : "Vacuum database after user login, true start vacuum, otherwise don't vacuum.",
          "default" : false
        }
      },
      "description" : "Feature settings."
    },
    "SalesSettings" : {
      "type" : "object",
      "properties" : {
        "DoubleVat" : {
          "$ref" : "#/$defs/doubleVatEnum",
          "description" : "Type of double vat.",
          "default" : 1
        },
        "DefaultCancellationReason" : {
          "type" : "string",
          "description" : "Default cancellation reason."
        },
        "ReceiptTailMessage" : {
          "$ref" : "#/$defs/iReadOnlyListOfString",
          "description" : "Lines of custom receipt tail message."
        },
        "IncludePrintout" : {
          "type" : "boolean",
          "description" : "Indicates if ]printout should be included in business documents (sales transaction, closure, etc.).",
          "default" : true
        },
        "LoyaltyQuestionMode" : {
          "enum" : [ "Never", "SaleStart", "SaleEnd", "SaleStartAndEnd", null ],
          "description" : "Loyalty question mode.",
          "default" : 1
        },
        "LoyaltyQuestionText" : {
          "type" : "string",
          "description" : "Text which will be shown as loyalty question."
        },
        "ReceiptNonTaxHeader" : {
          "type" : "string",
          "description" : "Receipt non-tax header."
        },
        "ReceiptPartnerTaxInfo" : {
          "type" : "string",
          "description" : "Receipt partner tax info."
        },
        "ReceiptLoyaltyText" : {
          "type" : "string",
          "description" : "Receipt loyalty text, it should be printed when customer was not identified, to motivate customer."
        },
        "ReceiptLoyaltyPointsText" : {
          "type" : "string",
          "description" : "Receipt loyalty text, when customer was identified and points was earned, if loyalty system provide the info. It can contain '{0}' which will be replaces with earned points."
        },
        "MaxItemsCountInSalesTransaction" : {
          "type" : "integer",
          "description" : "Maximal count of items, that can be added to one sales transaction.",
          "default" : 170
        }
      },
      "description" : "Sales settings for application."
    },
    "WetGoodsPriceChangeConfiguration" : {
      "type" : "object",
      "properties" : {
        "HidePendingPriceChangesValue" : {
          "type" : [ "boolean", "null" ],
          "description" : "Indicates if price change value should be hidden before is applied."
        },
        "NotificationPeriod" : {
          "type" : "string",
          "description" : "How long price changes should be displayed in advance."
        }
      },
      "description" : "Sales settings for applications."
    },
    "DryGoodsPriceChangeConfiguration" : {
      "type" : "object",
      "properties" : {
        "HidePendingPriceChangesValue" : {
          "type" : [ "boolean", "null" ],
          "description" : "Indicates if price change value should be hidden before is applied."
        },
        "NotificationPeriod" : {
          "type" : "string",
          "description" : "How long price changes should be displayed in advance."
        }
      },
      "description" : "Sales settings for applications."
    },
    "LoyaltyConfiguration" : {
      "type" : "object",
      "properties" : {
        "LoyaltyCards" : {
          "description" : "Loyalty cards definition.",
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "CardName" : {
                "type" : "string",
                "description" : "Card name."
              },
              "MatchPatterns" : {
                "$ref" : "#/$defs/iReadOnlyListOfString",
                "description" : "Loyalty card number match patterns."
              },
              "PointsCollectionAllowed" : {
                "type" : "boolean",
                "description" : "Allows to collect points."
              },
              "LoyaltyDiscountsAllowed" : {
                "type" : "boolean",
                "description" : "Allows to apply loyalty discounts."
              },
              "LoyaltyCoupons" : {
                "$ref" : "#/$defs/iReadOnlyListOfLoyaltyCouponDefinition",
                "description" : "Allowed loyalty coupons for the loyalty card."
              }
            },
            "description" : "Loyalty card definition."
          }
        },
        "LoyaltyCoupons" : {
          "$ref" : "#/$defs/iReadOnlyListOfLoyaltyCouponDefinition",
          "description" : "Generally allowed loyalty coupons, for all loyalty cards."
        }
      },
      "description" : "Loyalty system configuration."
    },
    "ClosureSettings" : {
      "type" : "object",
      "properties" : {
        "ClosureConfigurations" : {
          "description" : "List of closure configurations.",
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "Type" : {
                "enum" : [ "POS", "Shift", null ],
                "description" : "Closure configuration type enumeration."
              },
              "CashCurrencies" : {
                "$ref" : "#/$defs/iReadOnlyListOfString",
                "description" : "Currency ISO codes which should be included in closure."
              },
              "MinimalDeposit" : {
                "$ref" : "#/$defs/iReadOnlyListOfCurrencyValue",
                "description" : "Minimal amount of specific currency which should be in cash location when closure was started."
              },
              "AutomatedDeposit" : {
                "type" : "boolean",
                "description" : "Indicates if initial deposit should be made automatically.",
                "default" : false
              },
              "AutomatedDepositAmount" : {
                "$ref" : "#/$defs/iReadOnlyListOfCurrencyValue",
                "description" : "Amounts of automated deposit."
              },
              "MinimalDepositOverride" : {
                "type" : "boolean",
                "description" : "Indicates if closure can be started with cash amount bellow Datapac.Posybe.Configuration.Model.ClosureConfiguration.MinimalDeposit.",
                "default" : false
              },
              "DepositCashMovementTypeCode" : {
                "type" : [ "string", "null" ],
                "description" : "Cash movement type code, which should be used for initial deposit."
              },
              "AutomatedWithdrawal" : {
                "type" : "boolean",
                "description" : "Indicates if there should be made automated cash withdrawal after closure.",
                "default" : false
              },
              "WithdrawalMandatory" : {
                "type" : "boolean",
                "description" : "Indicates if cash withdrawal is required after closure.",
                "default" : false
              },
              "MinimalCashBalance" : {
                "$ref" : "#/$defs/iReadOnlyListOfCurrencyValue",
                "description" : "Minimal amount which should be in cash location after closure."
              },
              "WithdrawalLimit" : {
                "$ref" : "#/$defs/iReadOnlyListOfCurrencyValue",
                "description" : "Withdrawal cash limit for closure."
              },
              "WithdrawalCashMovementTypeCode" : {
                "type" : [ "string", "null" ],
                "description" : "Cash movement type code which should be used for cash withdrawal after closure."
              },
              "FiscalDayOpenMode" : {
                "enum" : [ "AutoAtOpen", "AskAtOpen", "Off", null ],
                "description" : "Fiscal day open mode"
              },
              "FiscalDayCloseMode" : {
                "enum" : [ "AutoAtClose", "AskAtClose", "Off", null ],
                "description" : "Fiscal day close mode."
              },
              "MaxCashCountAttempts" : {
                "type" : "integer",
                "description" : "Maximum count of entering wrong counted MOPs. When maximum count is reached, last value is stored and closure continues.",
                "default" : 1
              },
              "SaleOnlySameCashier" : {
                "type" : "boolean",
                "description" : "Indicates if only cashier which open day can sell.",
                "default" : true
              },
              "SettleBalanceWithdrawal" : {
                "type" : "boolean",
                "description" : "Setting to force withdrawal of cash after closure and balance settlement.",
                "default" : false
              },
              "SettleBalanceWithdrawalTypeCode" : {
                "type" : [ "string", "null" ],
                "description" : "Cash movement type code which should be used for automated withdrawal."
              },
              "SettleBalanceDepositTypeCode" : {
                "type" : [ "string", "null" ],
                "description" : "Cash movement type code which should be used for automated deposit."
              },
              "AutoWithdrawalMissingAmountHandling" : {
                "enum" : [ "NoWithdrawal", "WithdrawAvailable", "DepositAndWithdraw", null ],
                "description" : "How to handle missing withdrawal amount."
              }
            },
            "description" : "Specific closure configuration."
          }
        }
      },
      "description" : "Definition for closure proces."
    },
    "DiscountConfiguration" : {
      "type" : "object",
      "properties" : {
        "DiscountEngines" : {
          "description" : "List of available discount engines.",
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "Order" : {
                "type" : [ "integer", "null" ],
                "description" : "Order of discount engines."
              },
              "Name" : {
                "type" : "string",
                "description" : "Name of discount engine."
              },
              "Url" : {
                "type" : "string",
                "description" : "Discount engine URL."
              },
              "DiscountResponseTimeout" : {
                "type" : "integer",
                "description" : "Timeout for discount server response in milliseconds."
              }
            },
            "description" : "Discount engine matrix."
          }
        },
        "DiscountEnginesCombinations" : {
          "description" : "Discount engines combinations matrix.",
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      },
      "description" : "Discount configuration for application."
    },
    "CashDrawerConfiguration" : {
      "type" : "object",
      "properties" : {
        "OpenCashDrawerMode" : {
          "$ref" : "#/$defs/openCashDrawerMode",
          "description" : "Open cash drawer mode.\r\n**Change type**: 'Automatic'.",
          "default" : 3
        },
        "DieboldSmBusCashDrawer" : {
          "$ref" : "#/$defs/dieboldSmBusCashDrawerConfiguration",
          "description" : "Diebold SM bus cash drawer configuration.\r\n**Change type**: 'Automatic'."
        },
        "InitialDenominations" : {
          "description" : "Initial denomination.\r\n**Change type**: 'Automatic'.",
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "Value" : {
                "type" : [ "number", "null" ],
                "description" : "Value of nominal for audit.\r\n**Change type**: 'Automatic'."
              },
              "Count" : {
                "type" : [ "integer", "null" ],
                "description" : "Count of nominal for audit.\r\n**Change type**: 'Automatic'."
              },
              "DenominationType" : {
                "enum" : [ "Banknote", "Coin", null ],
                "description" : "Denomination type.\r\n**Change type**: 'Automatic'."
              }
            },
            "description" : "Cash audit nominal model."
          }
        }
      },
      "description" : "Cash drawer configuration."
    },
    "PlatformSettings" : {
      "type" : "object",
      "properties" : {
        "HealthUrl" : {
          "type" : [ "string", "null" ],
          "description" : "Platform URL for checking platform state."
        }
      },
      "description" : "Application settings."
    },
    "Telemetry" : {
      "type" : "object",
      "properties" : {
        "ConnectionString" : {
          "type" : "string",
          "description" : "Encrypted connection string for telemetry.\r\n**Change type**: 'Automatic'."
        },
        "OpenTelemetryEnabled" : {
          "type" : "boolean",
          "description" : "True if telemetry enabled, otherwise false for disabled.\r\n**Change type**: 'Automatic'.",
          "default" : false
        }
      },
      "description" : "Telemetry settings."
    },
    "SiteControllerConfiguration" : {
      "type" : "object",
      "properties" : {
        "BaseUrl" : {
          "type" : "string",
          "description" : "Site controller hub URL."
        },
        "ApplicationToken" : {
          "type" : "string",
          "description" : "Application token for authentication."
        },
        "ApplicationNumber" : {
          "type" : [ "integer", "null" ],
          "description" : "Custom application Id for Site Controller. You can override POS number, which is used by default."
        },
        "ReloadViewDelay" : {
          "$ref" : "#/$defs/number",
          "description" : "Reload view delay in milliseconds.",
          "default" : 1000
        },
        "HubReconnectDelay" : {
          "type" : [ "number", "null" ],
          "description" : "Site controller hub reconnect delay in milliseconds."
        },
        "DispenserTotalsTimeout" : {
          "type" : "integer",
          "description" : "Specify how long to wait for dispenser totals to arrive in seconds.",
          "default" : 30
        },
        "TankMeasurementTimeout" : {
          "type" : [ "integer", "null" ],
          "description" : "Specify how long to wait for tank measurements to arrive in seconds."
        },
        "TankGuiRefreshTimeout" : {
          "type" : "integer",
          "description" : "Refresh tank GUI timeout in milliseconds.",
          "default" : 5000
        }
      },
      "description" : "Site controller configuration."
    },
    "MopConfiguration" : {
      "type" : "object",
      "properties" : {
        "MopTerminalAssignment" : {
          "$ref" : "#/$defs/iReadOnlyDictionaryOfStringAndString",
          "description" : "MOP to terminal assignment."
        },
        "FleetCardsParsingMethods" : {
          "$ref" : "#/$defs/iReadOnlyDictionaryOfStringAndString",
          "description" : "Custom mapping for fleet cards data parsing (customer, license plate, etc.) (temporary solution). Mapping is defined by pair Issuer.Code and Parsing method. This definition should be moved into card issuer definition."
        },
        "AllowedMopCodes" : {
          "$ref" : "#/$defs/iReadOnlyListOfString",
          "description" : "List of allowed MoP codes. If empty, all MoP codes are allowed."
        }
      },
      "description" : "Configuration for mop setup."
    },
    "SoundConfig" : {
      "type" : "object",
      "properties" : {
        "Volume" : {
          "$ref" : "#/$defs/number",
          "description" : "Volume configuration.\r\n**Change type**: 'Automatic'.",
          "default" : 100
        }
      },
      "description" : "POS sound configuration."
    },
    "UpdatesConfiguration" : {
      "type" : "object",
      "properties" : {
        "UpdateManifestFilePath" : {
          "type" : "string",
          "description" : "Full path to the update manifest file.\r\n**Change type**: 'Automatic'.",
          "default" : "C:\\Datapac\\Update\\posybe2manifest.json"
        }
      },
      "description" : "Application updates configuration."
    },
    "DispensersGridConfiguration" : {
      "type" : "object",
      "properties" : {
        "Rows" : {
          "type" : [ "integer", "null" ],
          "description" : "Number of rows."
        },
        "Columns" : {
          "type" : [ "integer", "null" ],
          "description" : "Number of columns."
        },
        "Dispensers" : {
          "description" : "Dispensers configurations.",
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "DispenserNumber" : {
                "type" : [ "integer", "null" ],
                "description" : "Dispenser number."
              },
              "Row" : {
                "type" : [ "integer", "null" ],
                "description" : "Row where to disply dispenser in grid."
              },
              "Column" : {
                "type" : [ "integer", "null" ],
                "description" : "Column where to disply dispenser in grid."
              },
              "CustomColor" : {
                "type" : "string",
                "description" : "Custom background color of dispenser."
              }
            },
            "description" : "Dispenser grid configuration."
          }
        }
      },
      "description" : "Dispensers grid configuration."
    },
    "TransactionParking" : {
      "type" : "object",
      "properties" : {
        "NotifyFrom" : {
          "type" : "string",
          "description" : "Specify time when to display notification about parked transactions.\r\n**Change type**: 'Automatic'.",
          "default" : "23:30:00"
        },
        "NotifyTo" : {
          "type" : "string",
          "description" : "Specify time when to disable sale when there are parked transactions.\r\n**Change type**: 'Automatic'.",
          "default" : "23:50:00"
        }
      },
      "description" : "POS transaction parking configuration."
    },
    "BusinessSettings" : {
      "type" : "object",
      "properties" : {
        "CustomerAgeRestriction" : {
          "type" : "boolean",
          "description" : "Customer age restriction.\r\n**Change type**: 'Automatic'.",
          "default" : true
        },
        "EmployeeAgeRestriction" : {
          "type" : "boolean",
          "description" : "Employee age restriction.\r\n**Change type**: 'Automatic'.",
          "default" : true
        },
        "AutomaticClosureHour" : {
          "type" : "integer",
          "description" : "Automatic closure hour.\r\n**Change type**: 'Restart'.",
          "default" : 1
        },
        "RecordForeignCurrency" : {
          "type" : "boolean",
          "description" : "True if foreign currency cash movements should be used.\r\n**Change type**: 'Automatic'.",
          "default" : true
        },
        "ValidateCancellation" : {
          "type" : "boolean",
          "description" : "Indicates if AuthorizeCancelltion claim should be checked.\r\n**Change type**: 'Automatic'.",
          "default" : false
        },
        "ScheduledSellPriceChangeIntervalSeconds" : {
          "type" : "integer",
          "description" : "Interval for check scheduled sell price changes in seconds.\r\n**Change type**: 'Restart'.",
          "default" : 60
        },
        "InvoiceRequiredAmount" : {
          "type" : [ "number", "null" ],
          "description" : "Amount above which invoice is required.\r\n**Change type**: 'Automatic'."
        },
        "MaxCashMovementAmount" : {
          "type" : [ "number", "null" ],
          "description" : "Max CashMovement amount, for deposit or withdrawal.\r\n**Change type**: 'Automatic'."
        },
        "ShowLoyaltyRestrictionsInfoDialogs" : {
          "type" : "boolean",
          "description" : "Indicates if loyalty restrictions information dialogs should be shown to cashier before payment.\r\n**Change type**: 'Automatic'.",
          "default" : true
        },
        "AllowedManualDiscountWithLoyaltyCard" : {
          "type" : "boolean",
          "description" : "Allowed manual discount with loyalty card.\r\n**Change type**: 'Automatic'.",
          "default" : false
        },
        "PrimaryForeignCurrency" : {
          "type" : "string",
          "description" : "Primary foreign currency.\r\n**Change type**: 'Automatic'.",
          "default" : "EUR"
        },
        "HighRiskItemControl" : {
          "$ref" : "#/$defs/highRiskItemControl",
          "description" : "High-risk item control.\r\n**Change type**: 'Automatic'.",
          "default" : 1
        }
      },
      "description" : "Business settings."
    },
    "UpdateMessageSettings" : {
      "type" : "object",
      "properties" : {
        "AfterUpdateMessageFileName" : {
          "type" : [ "string", "null" ],
          "description" : "Message which can be displayed on login after successful update.\r\n**Change type**: 'Automatic'."
        }
      },
      "description" : "Settings for after update message behaviour."
    },
    "MolGroupPartnerCardSettings" : {
      "type" : "object",
      "properties" : {
        "Prefixes" : {
          "$ref" : "#/$defs/arrayOfString",
          "description" : "Prefixes for identify readed card."
        },
        "FuelDiscountBalanceDecimalPlaces" : {
          "type" : "integer",
          "description" : "Fuel discount balance decimal places.",
          "default" : 2
        }
      },
      "description" : "MOL Group partner card settings."
    },
    "BackgroundJobsSettings" : {
      "type" : "object",
      "properties" : {
        "MaxConcurrency" : {
          "type" : "integer",
          "description" : "Max concurrency for background jobs.\r\n**Change type**: 'Restart'.",
          "default" : 1
        },
        "JobSchedules" : {
          "description" : "Dictionary storing parameters for every background job.\r\n**Change type**: 'Restart'.",
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : {
              "CronExpression" : {
                "type" : "string",
                "description" : "Represents time interval of job. See www.cronmaker.com\r\n**Change type**: 'Restart'."
              },
              "IsEnabled" : {
                "type" : "boolean",
                "description" : "True if job is enabled.\r\n**Change type**: 'Restart'.",
                "default" : true
              },
              "RetentionPeriodInDays" : {
                "type" : [ "integer", "null" ],
                "description" : "Number of days to retain data before deletion.\r\n**Change type**: 'Automatic'."
              },
              "SynchronizationCountLimit" : {
                "type" : [ "integer", "null" ],
                "description" : "Max cycle count for synchronization.\r\n**Change type**: 'Automatic'."
              }
            },
            "description" : "Store config parameters of a job."
          }
        }
      },
      "description" : "Settings of background jobs."
    },
    "Peripherals" : {
      "type" : "object",
      "properties" : {
        "BarcodeScannerService" : {
          "description" : "Representing type of BarcodeScenner service.\r\n**Change type**: 'Restart'.",
          "default" : 0,
          "enum" : [ "UWP", "ZebraSDK", "Keyboard" ]
        }
      },
      "description" : "Peripheral settings."
    },
    "ImageCacheSettings" : {
      "type" : "object",
      "properties" : {
        "CacheDuration" : {
          "$ref" : "#/$defs/timeSpan",
          "description" : "Life duration of every cache entry.\r\n**Change type**: 'Automatic'.",
          "default" : "24:00:00"
        },
        "MaxMemoryCacheCount" : {
          "type" : "integer",
          "description" : "Max in-memory item storage count\r\n**Change type**: 'Automatic'.",
          "default" : 20
        },
        "RetryCount" : {
          "type" : "integer",
          "description" : "Number of retries trying to ensure the file is cached.\r\n**Change type**: 'Automatic'.",
          "default" : 1
        }
      },
      "description" : "Image cache settings."
    },
    "CancellationOptions" : {
      "type" : "object",
      "properties" : {
        "Type" : {
          "$ref" : "#/$defs/cancellationType",
          "description" : "Cancellation type.\r\n**Change type**: 'Automatic'.",
          "default" : 0
        },
        "CancellationTimeToleration" : {
          "$ref" : "#/$defs/timeSpan",
          "description" : "In case the POS is offline, only those sales transaction can be cancelled, that has been not craeted back in time later than this trashold.\r\n**Change type**: 'Automatic'.",
          "default" : "00:10:00"
        },
        "IgnoreOriginalFiscalCode" : {
          "type" : "boolean",
          "description" : "In case of cancellation of returnable packages, ask for original fiscal registration code.\r\n**Change type**: 'Automatic'.",
          "default" : false
        }
      },
      "description" : "Cancellation options settings."
    },
    "AvailableDiscounts" : {
      "type" : [ "object", "null" ],
      "properties" : {
        "Row" : {
          "type" : [ "array", "null" ],
          "items" : {
            "type" : "object",
            "properties" : {
              "Name" : {
                "type" : [ "string", "null" ],
                "description" : "Visible name of discount.\r\n**Change type**: 'Automatic'."
              },
              "Value" : {
                "$ref" : "#/$defs/number",
                "description" : "Value of discount, percent or price.\r\n**Change type**: 'Automatic'."
              },
              "IsPercentDiscount" : {
                "type" : "boolean",
                "description" : "True if percent discount type, otherwise false.\r\n**Change type**: 'Automatic'.",
                "default" : true
              },
              "OPP" : {
                "type" : [ "object", "null" ],
                "properties" : {
                  "ManualTriggerType" : {
                    "type" : [ "string", "null" ],
                    "description" : "Manual trigger type.\r\n**Change type**: 'Automatic'."
                  },
                  "ManualTriggerValue" : {
                    "type" : [ "string", "null" ],
                    "description" : "Manual trigger value.\r\n**Change type**: 'Automatic'."
                  }
                },
                "description" : "Information for OPP reward.\r\n**Change type**: 'Automatic'."
              }
            },
            "description" : "Discount information."
          },
          "description" : "Array of available discount for row.\r\n**Change type**: 'Automatic'."
        },
        "Basket" : {
          "type" : [ "array", "null" ],
          "items" : {
            "type" : "object",
            "properties" : {
              "Name" : {
                "type" : [ "string", "null" ],
                "description" : "Visible name of discount.\r\n**Change type**: 'Automatic'."
              },
              "Value" : {
                "$ref" : "#/$defs/number",
                "description" : "Value of discount, percent or price.\r\n**Change type**: 'Automatic'."
              },
              "IsPercentDiscount" : {
                "type" : "boolean",
                "description" : "True if percent discount type, otherwise false.\r\n**Change type**: 'Automatic'.",
                "default" : true
              },
              "OPP" : {
                "type" : [ "object", "null" ],
                "properties" : {
                  "ManualTriggerType" : {
                    "type" : [ "string", "null" ],
                    "description" : "Manual trigger type.\r\n**Change type**: 'Automatic'."
                  },
                  "ManualTriggerValue" : {
                    "type" : [ "string", "null" ],
                    "description" : "Manual trigger value.\r\n**Change type**: 'Automatic'."
                  }
                },
                "description" : "Information for OPP reward.\r\n**Change type**: 'Automatic'."
              }
            },
            "description" : "Discount information."
          },
          "description" : "Array of available discount for basket.\r\n**Change type**: 'Automatic'."
        }
      },
      "description" : "Available discount in pos."
    },
    "HeatingOilSettings" : {
      "type" : [ "object", "null" ],
      "properties" : {
        "VerifyFarmerBaseUrl" : {
          "type" : "string",
          "description" : "Heating oil settings.\r\n**Change type**: 'Automatic'.",
          "default" : "https://beta.edavki.durs.si/ReceptionistService"
        },
        "ProviderTaxPayerId" : {
          "type" : "string",
          "description" : "Provider tax payer ID.\r\n**Change type**: 'Automatic'.",
          "default" : "88362264"
        },
        "ProviderSecret" : {
          "type" : "string",
          "description" : "Provider secret authentication code.\r\n**Change type**: 'Automatic'.",
          "default" : "LZIq0CAukqAPbZ+B++McqI8JhWiUuNPPCBU9YvHKv1TQGYFk8I41F673Awe3MTZLNmJywfD0WdM="
        },
        "ProductNumber" : {
          "type" : "string",
          "description" : "Heating oil product number.\r\n**Change type**: 'Automatic'.",
          "default" : "666"
        }
      },
      "description" : "Heating oil settings."
    },
    "OppCloudSettings" : {
      "type" : [ "object", "null" ],
      "properties" : {
        "MasterDataSourceSystemID" : {
          "type" : [ "string", "null" ],
          "description" : "Master data source system Id."
        },
        "ApiUrl" : {
          "type" : [ "string", "null" ],
          "description" : "Api url of OPP Cloud."
        },
        "TokenUrl" : {
          "type" : [ "string", "null" ],
          "description" : "Token url for get new token."
        },
        "ClientId" : {
          "type" : [ "string", "null" ],
          "description" : "Client Id."
        },
        "ClientSecret" : {
          "type" : [ "string", "null" ],
          "description" : "Client secret."
        },
        "GrantType" : {
          "type" : "string",
          "description" : "Grant type.",
          "default" : "client_credentials"
        },
        "RequestTimeot" : {
          "$ref" : "#/$defs/timeSpan",
          "description" : "Request timeout.",
          "default" : "00:00:05"
        },
        "LoyaltyMappingExternalCode" : {
          "type" : [ "string", "null" ],
          "description" : "Loyalty mapping external code."
        },
        "MeasurementUnitMappingCode" : {
          "type" : [ "string", "null" ],
          "description" : "MeasurementUnit mapping code."
        },
        "LocationCodeMappingCode" : {
          "type" : [ "string", "null" ],
          "description" : "Location codemapping code."
        },
        "QuantityDecimals" : {
          "type" : [ "string", "null" ],
          "description" : "Quantity decimals."
        },
        "ProcessCoupons" : {
          "type" : "boolean",
          "description" : "True if also process coupons.",
          "default" : false
        },
        "ProcessDiscounts" : {
          "type" : "boolean",
          "description" : "True if also process discounts.",
          "default" : false
        },
        "CustomerLoyaltyDiscountsForbidden" : {
          "type" : "boolean",
          "description" : "True if it is forbidden to provide discount, when customer is identified.",
          "default" : false
        },
        "ProcessAutomaticManualPromotions" : {
          "type" : "boolean",
          "description" : "True if also process automatic manual promotions.",
          "default" : false
        },
        "AutomaticManualPromotions" : {
          "type" : [ "array", "null" ],
          "items" : {
            "type" : "object",
            "properties" : {
              "Description" : {
                "type" : [ "string", "null" ],
                "description" : "Descritpion of promotion."
              },
              "Articles" : {
                "$ref" : "#/$defs/arrayOfString",
                "description" : "Article numbers."
              },
              "OPP" : {
                "$ref" : "#/$defs/promotion",
                "description" : "Promotion definition."
              }
            },
            "description" : "Automatic defined promotion."
          },
          "description" : "List of Automatic defined promotion."
        },
        "Proxy" : {
          "type" : [ "object", "null" ],
          "properties" : {
            "Address" : {
              "type" : [ "string", "null" ],
              "description" : "Base adress of proxy server."
            },
            "BypassProxyOnLocal" : {
              "type" : "boolean",
              "description" : "True if bypass proxy.",
              "default" : true
            },
            "UseDefaultCredentials" : {
              "type" : "boolean",
              "description" : "Use default cretendials.",
              "default" : false
            }
          },
          "description" : "Proxy configuration."
        }
      },
      "description" : "Opp cloud settings."
    },
    "CustomerApiSettings" : {
      "type" : [ "object", "null" ],
      "properties" : {
        "RootUrl" : {
          "type" : [ "string", "null" ],
          "description" : "Root url.\r\n**Change type**: 'Automatic'."
        }
      },
      "description" : "Customer external api settings."
    },
    "SapStockLevelSettings" : {
      "type" : [ "object", "null" ],
      "properties" : {
        "BaseUrl" : {
          "type" : [ "string", "null" ],
          "description" : "Base url for service.\r\n**Change type**: 'Automatic'."
        },
        "Username" : {
          "type" : [ "string", "null" ],
          "description" : "Username for service.\r\n**Change type**: 'Automatic'."
        },
        "Password" : {
          "type" : [ "string", "null" ],
          "description" : "Password for service.\r\n**Change type**: 'Automatic'."
        },
        "CustomerIdentifier" : {
          "type" : [ "string", "null" ],
          "description" : "SAP customer identifier.\r\n**Change type**: 'Automatic'."
        },
        "LocationCodeMappingCode" : {
          "type" : [ "string", "null" ],
          "description" : "Mapping key for location.\r\n**Change type**: 'Automatic'."
        }
      },
      "description" : "Confguration for SAP stock level service."
    },
    "SixpayPaymentOptions" : {
      "type" : [ "object", "null" ],
      "properties" : {
        "Name" : {
          "type" : "string",
          "description" : "Port name."
        },
        "BaudRate" : {
          "type" : "integer",
          "description" : "Baud rate."
        },
        "Parity" : {
          "type" : "string",
          "description" : "Parity.",
          "default" : "None"
        },
        "DataBits" : {
          "type" : "integer",
          "description" : "Data bits.",
          "default" : 8
        },
        "StopBits" : {
          "type" : "string",
          "description" : "Stop bits.",
          "default" : "One"
        }
      },
      "description" : "Sixpay payment options."
    },
    "KeycloakSettings" : {
      "type" : "object",
      "properties" : {
        "KeycloakHost" : {
          "type" : "string",
          "description" : "Host Url.\r\n**Change type**: 'Restart'."
        },
        "KeycloakClientId" : {
          "type" : "string",
          "description" : "Client Id.\r\n**Change type**: 'Restart'."
        },
        "KeycloakClientSecret" : {
          "type" : "string",
          "description" : "Client secret.\r\n**Change type**: 'Restart'."
        },
        "KeycloakRealm" : {
          "type" : "string",
          "description" : "Realm.\r\n**Change type**: 'Restart'."
        }
      },
      "description" : "Keycloak settings."
    },
    "AutomationSettings" : {
      "type" : "object",
      "properties" : {
        "ShowFullScreen" : {
          "type" : "boolean",
          "description" : "Start application in fullscreen mode.\r\n**Change type**: 'Restart'.",
          "default" : true
        },
        "ShowKeyboard" : {
          "type" : "boolean",
          "description" : "Show keyboard setting.\r\n**Change type**: 'Restart'.",
          "default" : true
        },
        "CanShutdown" : {
          "type" : "boolean",
          "description" : "Can access to StartShutDown methods.\r\n**Change type**: 'Restart'.",
          "default" : true
        },
        "DisableSplashscreen" : {
          "type" : "boolean",
          "description" : "Disable splash screen.\r\n**Change type**: 'Restart'.",
          "default" : true
        }
      },
      "description" : "Setting for automation testings."
    },
    "AppSettings" : {
      "type" : "object",
      "properties" : {
        "DefaultLanguage" : {
          "type" : "string",
          "description" : "Default application language. It will be used for registration or when merchant language is missing.\r\n**Change type**: 'Restart'.",
          "default" : "en"
        },
        "LocalCacheDir" : {
          "type" : "string",
          "description" : "Default path for local cache directory.\r\n**Change type**: 'Restart'.",
          "default" : "C:\\Datapac\\Pos\\LocalCache"
        },
        "PlatformBaseUrl" : {
          "type" : "string",
          "description" : "Base platform URL.\r\n**Change type**: 'Restart'."
        },
        "CustomerDisplayPath" : {
          "type" : [ "string", "null" ],
          "description" : "Path to the customer display EXE file. If empty or path does not exists, customer display won't be managed by application.\r\n**Change type**: 'Restart'."
        },
        "ApiPort" : {
          "type" : [ "integer", "null" ],
          "description" : "Api port for open communication with applicaiton.\r\n**Change type**: 'Restart'."
        }
      },
      "description" : "Application settings."
    }
  },
  "$defs" : {
    "doubleVatEnum" : {
      "enum" : [ "Default", "Takeaway", "Inhouse", "AskOnce", "AskEverytime" ],
      "description" : "Type of double vat."
    },
    "iReadOnlyListOfString" : {
      "type" : "array",
      "items" : {
        "type" : "string"
      }
    },
    "iReadOnlyListOfLoyaltyCouponDefinition" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "CouponName" : {
            "type" : "string",
            "description" : "Coupon name."
          },
          "MatchPatterns" : {
            "$ref" : "#/$defs/iReadOnlyListOfString",
            "description" : "Loyalty coupon number match patterns."
          }
        },
        "description" : "Loyalty coupon definition."
      }
    },
    "iReadOnlyListOfCurrencyValue" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "CurrencyISOCode" : {
            "type" : [ "string", "null" ],
            "description" : "Currency ISO code."
          },
          "Value" : {
            "type" : [ "number", "null" ],
            "description" : "Value."
          }
        },
        "description" : "Currency value."
      }
    },
    "number" : {
      "type" : "number"
    },
    "openCashDrawerMode" : {
      "enum" : [ "OEC", "Sunmi", "None", "DieboldSMBus", "Fiscat" ],
      "description" : "Open cash drawer mode."
    },
    "dieboldSmBusCashDrawerConfiguration" : {
      "type" : "object",
      "properties" : {
        "Address" : {
          "type" : "string",
          "description" : "Cash drawer address.\r\n**Change type**: 'Automatic'."
        }
      },
      "description" : "Diebold SM bus cash drawer configuration."
    },
    "iReadOnlyDictionaryOfStringAndString" : {
      "type" : "array",
      "items" : {
        "type" : "string"
      }
    },
    "highRiskItemControl" : {
      "enum" : [ "NoControl", "WarningOnly", "BlockSales" ],
      "description" : "High-risk item control enum."
    },
    "arrayOfString" : {
      "type" : "array",
      "items" : {
        "type" : "string"
      }
    },
    "timeSpan" : {
      "type" : "string",
      "format" : "duration"
    },
    "cancellationType" : {
      "enum" : [ "MinusItem", "AnyMop", "Void" ],
      "description" : "Cancellation type."
    },
    "promotion" : {
      "type" : "object",
      "properties" : {
        "ManualTriggerType" : {
          "type" : [ "string", "null" ],
          "description" : "Manual trigger type."
        },
        "ManualTriggerValue" : {
          "type" : [ "string", "null" ],
          "description" : "Manual trigger value."
        },
        "PrivilegeType" : {
          "type" : [ "string", "null" ],
          "description" : "Privilege type."
        },
        "PrivilegeValue" : {
          "type" : [ "number", "null" ],
          "description" : "Privilege value."
        }
      },
      "description" : "Promition definition."
    }
  }
}
